## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: /
    metadata:
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: 'Lumen (9.0.1) (Laravel Components ^9.0)'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: all
    metadata:
      title: findAll
      description: |-
        Find all logs.
        <aside class="notice">Require users microservice.</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "content": [
            {
                "id": 1,
                "user": "user",
                "base_path": "/",
                "client_ip": "127.0.0.1",
                "host": "http://localhost",
                "query_string": "name=hello_world",
                "request_uri": "/create",
                "user_info": "user_info",
                "message": "hello",
                "reason": "world",
                "created_at": "2022-03-14T12:57:41.000000Z",
                "updated_at": "2022-03-14T12:57:41.000000Z",
           },
          ],
          "errors": null
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'by-id/{id}'
    metadata:
      title: findById
      description: |-
        Find log by id.
        <aside class="notice">Require users microservice.</aside>
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: application/json
    urlParameters:
      id:
        name: id
        description: ''
        required: true
        example: sit
        type: string
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "content": {
                "user": "et",
                "base_path": "sint",
                "client_ip": "aut",
                "host": "magnam",
                "query_string": "illo",
                "request_uri": "sed",
                "user_info": "nisi",
                "reason": "odio",
                "message": "accusantium",
                "created_at": "2022-03-14T12:57:41.000000Z",
                "updated_at": "2022-03-14T12:57:41.000000Z",
                "id": 21
            },
            "errors": null
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: create
    metadata:
      title: store
      description: 'Store new log.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Bearer: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      user:
        name: user
        description: 'Current application user.'
        required: true
        example: temporibus
        type: string
        custom: []
      client_ip:
        name: client_ip
        description: 'Current application user ip.'
        required: true
        example: consequatur
        type: string
        custom: []
      base_path:
        name: base_path
        description: 'Current application user base path.'
        required: true
        example: doloribus
        type: string
        custom: []
      host:
        name: host
        description: 'Current application user host.'
        required: true
        example: cumque
        type: string
        custom: []
      query_string:
        name: query_string
        description: 'Current application user query string.'
        required: true
        example: consequuntur
        type: string
        custom: []
      request_uri:
        name: request_uri
        description: 'Current application user request uri.'
        required: true
        example: qui
        type: string
        custom: []
      user_info:
        name: user_info
        description: 'Current application user info.'
        required: true
        example: deserunt
        type: string
        custom: []
      reason:
        name: reason
        description: 'Request reason.'
        required: true
        example: quod
        type: string
        custom: []
      message:
        name: message
        description: 'Current application user message.'
        required: true
        example: eveniet
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "content": {
            "user": "et",
            "base_path": "sint",
            "client_ip": "aut",
            "host": "magnam",
            "query_string": "illo",
            "request_uri": "sed",
            "user_info": "nisi",
            "reason": "odio",
            "message": "accusantium",
            "created_at": "2022-03-14T12:57:41.000000Z",
            "updated_at": "2022-03-14T12:57:41.000000Z",
            "id": 21
          },
          "errors": null
          }
        headers: []
        description: '200'
    responseFields: []
